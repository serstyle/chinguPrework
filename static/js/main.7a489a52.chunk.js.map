{"version":3,"sources":["Search/Search.js","Preloader/Preloader.js","MeteoriteList/MeteoriteList2.js","App.js","serviceWorker.js","index.js"],"names":["Search","state","input","_this2","this","react_default","a","createElement","style","textAlign","onSubmit","e","props","onSearchChange","TextField","label","onChange","setState","target","value","Component","withStyles","theme","progress","margin","spacing","classes","CircularProgress","className","useStyles1","makeStyles","root","flexShrink","color","palette","text","secondary","marginLeft","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","IconButton","onClick","event","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","width","marginTop","table","minWidth","tableWrapper","overflowX","CustomPaginationActionsTable","_ref","meteoriteArr","isPending","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setPage","_React$useState3","_React$useState4","setRowsPerPage","emptyRows","min","length","useEffect","Paper","Table","TableHead","TableRow","TableCell","Preloader","postion","left","TableBody","slice","map","row","key","id","name","nametype","mass","fall","year","substring","reclat","reclong","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","App","filterMeteorite","preventDefault","newArr","_this","filter","meteorite","toLowerCase","includes","fetch","concat","then","res","json","data","position","background","Search_Search","MeteoriteList2","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a489a52.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField';\nexport default class Search extends Component {\n  state={\n    input:''\n  }\n  render() {\n        return (\n      <div style={{textAlign:'center'}}>\n        <form  onSubmit={(e)=>this.props.onSearchChange(e, this.state.input)}>\n          <TextField label='Search' onChange={(e)=>this.setState({input:e.target.value})}/>\n        </form>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  progress: {\n    margin: theme.spacing(2),\n  },\n});\n\nfunction CircularIndeterminate(props) {\n  const { classes } = props;\n  return (\n      <CircularProgress className={classes.progress} />\n  );\n}\n\nCircularIndeterminate.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CircularIndeterminate);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Preloader from '../Preloader/Preloader'\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"First Page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"Previous Page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"Next Page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"Last Page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nfunction CustomPaginationActionsTable({meteoriteArr, isPending}) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, meteoriteArr.length - page * rowsPerPage);\n\n  React.useEffect(()=>{\n    setPage(0)\n  }, [meteoriteArr])\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}>\n        <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>ID</TableCell>\n                <TableCell>Name Type</TableCell>\n                <TableCell>Mass(g)</TableCell>\n                <TableCell>Fall</TableCell>\n                <TableCell>Year</TableCell>\n                <TableCell>Latitude</TableCell>\n                <TableCell>Longitude</TableCell>\n              </TableRow>\n            </TableHead>\n          {\n              isPending?\n              <Preloader style={{postion:'absolute', left:'45%'}}/>\n                :\n          <TableBody>\n              {!meteoriteArr?\n                <TableRow>error oopsie</TableRow>:\n            meteoriteArr.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow className={classes.row} key={row.id}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.id}</TableCell>\n                <TableCell>{row.nametype}</TableCell>\n                <TableCell>{row.mass}</TableCell>\n                <TableCell>{row.fall}</TableCell>\n                <TableCell>{row.year?row.year.substring(0,4):null}</TableCell>\n                <TableCell>{row.reclat}</TableCell>\n                <TableCell>{row.reclong}</TableCell>\n                </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>}\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={3}\n                count={meteoriteArr.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n\nexport default CustomPaginationActionsTable;","import React, { Component } from 'react'\nimport Search from './Search/Search'\nimport MeteoriteList2 from './MeteoriteList/MeteoriteList2'\n\n\nexport default class App extends Component {\n  state = {\n    input:'',\n    meteoriteArr:[],\n    filterMeteorite:[],\n    isPending:true\n  }\n\n  onSearchChange = (e, input) => {\n    e.preventDefault()\n    const newArr = this.state.meteoriteArr.filter(meteorite => meteorite.name.toLowerCase().includes(input.toLowerCase())?meteorite:null )\n    this.setState({filterMeteorite:newArr, input: input})\n  }\n  //https://data.nasa.gov/resource/gh4g-9sfh.json?$order=name&$limit=100000&$where=UPPER(name) like '%25${\"\"}%25'\n  //https://data.nasa.gov/resource/gh4g-9sfh.json\n  //https://data.nasa.gov/resource/gh4g-9sfh.json?$limit=10&$offset=20\n  componentDidMount(){\n      fetch(`https://data.nasa.gov/resource/gh4g-9sfh.json?$order=name&$limit=100000&$where=UPPER(name) like '%25${\"\"}%25'`)\n      .then(res => res.json())\n      .then(data => this.setState({meteoriteArr:data,isPending:false}))\n  }\n\n  render() {\n    return (\n      <div style={{width:'80%', position:'absolute', left:'10%', background:'#f8f8f8'}}>\n        <h1 style={{textAlign:'center'}}>Meteorite App</h1>\n        <Search onSearchChange={this.onSearchChange}/>\n        <MeteoriteList2  meteoriteArr={this.state.input?this.state.filterMeteorite:this.state.meteoriteArr} isPending={this.state.isPending}/>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}